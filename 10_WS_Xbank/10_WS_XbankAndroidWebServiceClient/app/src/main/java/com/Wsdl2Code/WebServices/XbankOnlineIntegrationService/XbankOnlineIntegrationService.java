package com.Wsdl2Code.WebServices.XbankOnlineIntegrationService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 4/30/2016 1:10:31 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.Wsdl2Code.WebServices.XbankOnlineIntegrationService.WS_Enums.*;
import java.util.List;
import org.ksoap2.SoapEnvelope;
import org.ksoap2.SoapFault;
import org.ksoap2.serialization.SoapSerializationEnvelope;
import org.ksoap2.transport.HttpTransportSE;
import org.ksoap2.HeaderProperty;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;
import android.os.AsyncTask;
import org.ksoap2.serialization.MarshalFloat;

public class XbankOnlineIntegrationService {
    
    public String NAMESPACE ="http://onlinebanking.xbank.de/";
    public String url="";   //TODO: insert the web service url as value for this attribute.
    public int timeOut = 180;
    public IWsdl2CodeEvents eventHandler;
    public SoapProtocolVersion soapVersion;
    
    public XbankOnlineIntegrationService(){}
    
    public XbankOnlineIntegrationService(IWsdl2CodeEvents eventHandler)
    {
        this.eventHandler = eventHandler;
    }
    public XbankOnlineIntegrationService(IWsdl2CodeEvents eventHandler,String url)
    {
        this.eventHandler = eventHandler;
        this.url = url;
    }
    public XbankOnlineIntegrationService(IWsdl2CodeEvents eventHandler,String url,int timeOutInSeconds)
    {
        this.eventHandler = eventHandler;
        this.url = url;
        this.setTimeOut(timeOutInSeconds);
    }
    public void setTimeOut(int seconds){
        this.timeOut = seconds * 1000;
    }
    public void setUrl(String url){
        this.url = url;
    }
    public void loginAsync(String arg0,String arg1) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        loginAsync(arg0, arg1, null);
    }
    
    public void loginAsync(final String arg0,final String arg1,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, userLoginResponse>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected userLoginResponse doInBackground(Void... params) {
                return login(arg0, arg1, headers);
            }
            @Override
            protected void onPostExecute(userLoginResponse result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("login", result);
                }
            }
        }.execute();
    }
    
    public userLoginResponse login(String arg0,String arg1){
        return login(arg0, arg1, null);
    }
    
    public userLoginResponse login(String arg0,String arg1,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://onlinebanking.xbank.de/","login");
        soapReq.addProperty("arg0",arg0);
        soapReq.addProperty("arg1",arg1);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://onlinebanking.xbank.de/login", soapEnvelope,headers);
            }else{
                httpTransport.call("http://onlinebanking.xbank.de/login", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    userLoginResponse resultVariable =  new userLoginResponse (j);
                    return resultVariable;
                    
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getMyAccountsAsync(int arg0) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getMyAccountsAsync(arg0, null);
    }
    
    public void getMyAccountsAsync(final int arg0,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, accountListResponse>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected accountListResponse doInBackground(Void... params) {
                return getMyAccounts(arg0, headers);
            }
            @Override
            protected void onPostExecute(accountListResponse result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getMyAccounts", result);
                }
            }
        }.execute();
    }
    
    public accountListResponse getMyAccounts(int arg0){
        return getMyAccounts(arg0, null);
    }
    
    public accountListResponse getMyAccounts(int arg0,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://onlinebanking.xbank.de/","getMyAccounts");
        soapReq.addProperty("arg0",arg0);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://onlinebanking.xbank.de/getMyAccounts", soapEnvelope,headers);
            }else{
                httpTransport.call("http://onlinebanking.xbank.de/getMyAccounts", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    accountListResponse resultVariable =  new accountListResponse (j);
                    return resultVariable;
                    
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void logoutAsync(int arg0) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        logoutAsync(arg0, null);
    }
    
    public void logoutAsync(final int arg0,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, returncodeResponse>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected returncodeResponse doInBackground(Void... params) {
                return logout(arg0, headers);
            }
            @Override
            protected void onPostExecute(returncodeResponse result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("logout", result);
                }
            }
        }.execute();
    }
    
    public returncodeResponse logout(int arg0){
        return logout(arg0, null);
    }
    
    public returncodeResponse logout(int arg0,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://onlinebanking.xbank.de/","logout");
        soapReq.addProperty("arg0",arg0);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://onlinebanking.xbank.de/logout", soapEnvelope,headers);
            }else{
                httpTransport.call("http://onlinebanking.xbank.de/logout", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    returncodeResponse resultVariable =  new returncodeResponse (j);
                    return resultVariable;
                    
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getBalanceAsync(int arg0,int arg1) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getBalanceAsync(arg0, arg1, null);
    }
    
    public void getBalanceAsync(final int arg0,final int arg1,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, accountBalanceResponse>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected accountBalanceResponse doInBackground(Void... params) {
                return getBalance(arg0, arg1, headers);
            }
            @Override
            protected void onPostExecute(accountBalanceResponse result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getBalance", result);
                }
            }
        }.execute();
    }
    
    public accountBalanceResponse getBalance(int arg0,int arg1){
        return getBalance(arg0, arg1, null);
    }
    
    public accountBalanceResponse getBalance(int arg0,int arg1,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://onlinebanking.xbank.de/","getBalance");
        soapReq.addProperty("arg0",arg0);
        soapReq.addProperty("arg1",arg1);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://onlinebanking.xbank.de/getBalance", soapEnvelope,headers);
            }else{
                httpTransport.call("http://onlinebanking.xbank.de/getBalance", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    accountBalanceResponse resultVariable =  new accountBalanceResponse (j);
                    return resultVariable;
                    
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void transferAsync(int arg0,int arg1,int arg2,double arg3,boolean arg3Specified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        transferAsync(arg0, arg1, arg2, arg3, arg3Specified, null);
    }
    
    public void transferAsync(final int arg0,final int arg1,final int arg2,final double arg3,final boolean arg3Specified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, transferMoneyResponse>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected transferMoneyResponse doInBackground(Void... params) {
                return transfer(arg0, arg1, arg2, arg3, arg3Specified, headers);
            }
            @Override
            protected void onPostExecute(transferMoneyResponse result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("transfer", result);
                }
            }
        }.execute();
    }
    
    public transferMoneyResponse transfer(int arg0,int arg1,int arg2,double arg3,boolean arg3Specified){
        return transfer(arg0, arg1, arg2, arg3, arg3Specified, null);
    }
    
    public transferMoneyResponse transfer(int arg0,int arg1,int arg2,double arg3,boolean arg3Specified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://onlinebanking.xbank.de/","transfer");
        MarshalFloat marshalFloat = new MarshalFloat();
        marshalFloat.register(soapEnvelope);
        soapReq.addProperty("arg0",arg0);
        soapReq.addProperty("arg1",arg1);
        soapReq.addProperty("arg2",arg2);
        soapReq.addProperty("arg3",arg3);
        soapReq.addProperty("arg3Specified",arg3Specified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://onlinebanking.xbank.de/transfer", soapEnvelope,headers);
            }else{
                httpTransport.call("http://onlinebanking.xbank.de/transfer", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    transferMoneyResponse resultVariable =  new transferMoneyResponse (j);
                    return resultVariable;
                    
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
}
